/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package meninblack1;

import java.util.ArrayList;
import oru.inf.InfException;

/**
 *
 * @author maxli
 */

public class AgentSignOutEquipment extends javax.swing.JFrame {

    /**
     * Creates new form AgentSignOutEquipment
     */
    int myID;
    public AgentSignOutEquipment() {
        try{
            System.out.println(DataHolder.getInstance().getSharedData());
            myID = Integer.parseInt(Database.getDatabase().fetchSingle("select Agent_ID from agent where Epost = '"+DataHolder.getInstance().getSharedData()+ "'"));
            System.out.println("detta Ã¤r id" +myID);
        }catch(InfException ex){
            System.out.println(ex);
        }
        initComponents();
        viewMyEquipment();
        fillEquipmentCB();
        fillSelectReturnCB();

    }
    private void viewMyEquipment(){
        try{
            System.out.println(myID);
            ArrayList<String> myWeapons = Database.getDatabase().fetchColumn("select Benamning from utrustning where Utrustnings_ID in (select Utrustnings_ID from innehar_utrustning where Agent_ID = (select Agent_ID from agent where Agent_ID ="+myID+"))");
            for(String weapon : myWeapons){
                weaponDisplay.append(weapon+"\n");
            }
        }catch(InfException ex){
            System.out.println(ex);
        }
    }
    private void fillSelectReturnCB() {
        try {
            System.out.println("select Benamning from utrustning where Utrustnings_ID in (select Utrustnings_ID from innehar_utrustning where Agent_ID = (select Agent_ID from agent where Agent_ID ="+myID+"))");
            selectReturnCB.addItem("");
            selectReturnCB.removeItem("Item 1");
            selectReturnCB.removeItem("Item 2");
            selectReturnCB.removeItem("Item 3");
            selectReturnCB.removeItem("Item 4");
            ArrayList<String> weapons = Database.getDatabase().fetchColumn("select Benamning from utrustning where Utrustnings_ID in (select Utrustnings_ID from innehar_utrustning where Agent_ID = (select Agent_ID from agent where Agent_ID ="+myID+"))");
            //select Benamning from utrustning where Utrustnings_ID in (select Utrustnings_ID from innehar_utrustning where Agent_ID = (select Agent_ID from agent where Agent_ID = 3));
            System.out.println(weapons);
            for (String oneWeapon : weapons) {
                selectReturnCB.addItem(oneWeapon);
            }
        } catch (InfException ex) {
            System.out.println(ex);
        }
    }
    // This method fills the combo box (selectItemCB) with equipment items
    private void fillEquipmentCB() {
        selectItemCB.addItem("");
        selectItemCB.removeItem("Item 1");
        selectItemCB.removeItem("Item 2");
        selectItemCB.removeItem("Item 3");
        selectItemCB.removeItem("Item 4");
        try {
             // Retrieve a list of weapon names from the database
            ArrayList<String> weapons = Database.getDatabase().fetchColumn("select Benamning from utrustning");
            // Iterate through the retrieved weapon names and add them to the combo box
            for (String oneWeapon : weapons) {
                selectItemCB.addItem(oneWeapon);
            }
        }catch(InfException ex) {
            System.out.println(ex);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectItemCB = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        equipButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        weaponDisplay = new javax.swing.JTextArea();
        returnButton = new javax.swing.JButton();
        selectReturnCB = new javax.swing.JComboBox<>();
        backButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectItemCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Select equipment");

        equipButton.setText("Equip");
        equipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipButtonActionPerformed(evt);
            }
        });

        weaponDisplay.setColumns(20);
        weaponDisplay.setRows(5);
        jScrollPane1.setViewportView(weaponDisplay);

        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        selectReturnCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("equip/return equippment");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(equipButton)
                            .addComponent(selectItemCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(returnButton)
                            .addComponent(selectReturnCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 21, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectItemCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(equipButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectReturnCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(returnButton)
                        .addGap(29, 29, 29)
                        .addComponent(backButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        AgentStartWindow frame = new AgentStartWindow();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed
    
    // This method is triggered when the equipButton is clicked 
    private void equipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipButtonActionPerformed
        // TODO add your handling code here:
        try{
            String selectedWeapon = selectItemCB.getSelectedItem().toString();
            System.out.println("select Utrustnings_ID from utrustning where Benamning ='"+selectedWeapon+"'");
            System.out.println(DataHolder.getInstance().getSharedData());
            
            int weaponID = Integer.parseInt(Database.getDatabase().fetchSingle("select Utrustnings_ID from utrustning where Benamning ='"+selectedWeapon+"'"));
             // Display the selected weapon in the weaponDisplay JTextArea
            weaponDisplay.append(selectedWeapon+"\n");
            AgentSignOutEquipmentDate frame = new AgentSignOutEquipmentDate(myID, weaponID);
            frame.setVisible(true);
            
        }catch(InfException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_equipButtonActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        // TODO add your handling code here:
        try{
            System.out.println("return");
            String weaponName = selectReturnCB.getSelectedItem().toString();
            int weaponID = Integer.parseInt(Database.getDatabase().fetchSingle("select Utrustnings_ID from utrustning where Benamning = '"+weaponName+ "'"));
            Database.getDatabase().delete("delete from innehar_utrustning where Utrustnings_ID = "+weaponID+" and Agent_ID = "+myID);
            weaponDisplay.setText("");
            ArrayList<String> weapons = Database.getDatabase().fetchColumn("select Benamning from utrustning where Utrustnings_ID in (select Utrustnings_ID from innehar_utrustning where Agent_ID = (select Agent_ID from agent where Agent_ID ="+myID+"))");
            for(String oneWeapon : weapons){
                weaponDisplay.append(oneWeapon+"\n");
            }
        }catch(InfException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_returnButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgentSignOutEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgentSignOutEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgentSignOutEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgentSignOutEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgentSignOutEquipment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton equipButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton returnButton;
    private javax.swing.JComboBox<String> selectItemCB;
    private javax.swing.JComboBox<String> selectReturnCB;
    private javax.swing.JTextArea weaponDisplay;
    // End of variables declaration//GEN-END:variables
}
