/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package meninblack1;

import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JPanel;
import oru.inf.InfException;

/**
 *
 * @author maxli
 */
public class AdminRemoveAgent extends javax.swing.JFrame {

    /**
     * Creates new form AdminRemoveAgent
     */
    public AdminRemoveAgent() {
        initComponents();
        fillCB();
    } 
    // This method populates a JComboBox (selectCB) with agent email addresses, excluding the current agent's email
    private void fillCB() {
        selectCB.addItem("");
        selectCB.removeItem("Item 1");
        selectCB.removeItem("Item 2");
        selectCB.removeItem("Item 3");
        selectCB.removeItem("Item 4");
        try {
             // Get the email of the currently logged-in agent
            String agentEmail = DataHolder.getInstance().getSharedData();
            String selectQuery = "select Epost from agent where Epost !='" + agentEmail+"'";
             // Fetch a list of agent email addresses from the database
            ArrayList<String> emails = Database.getDatabase().fetchColumn(selectQuery);
            // Iterate through each agent email address
            for (String oneEmail : emails) {
                String selectIDQuery = "select Agent_ID from agent where Epost = '" + oneEmail + "'";
                int agent_ID = Integer.parseInt(Database.getDatabase().fetchSingle(selectIDQuery));
                selectCB.addItem(oneEmail);
            }
        } catch (InfException ex) {
            System.out.println(ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectCB = new javax.swing.JComboBox<>();
        removeButton = new javax.swing.JButton();
        nameOut = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        message = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCBActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Remove agent ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(selectCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(removeButton))
                                .addGap(29, 29, 29)
                                .addComponent(nameOut, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabel1)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(removeButton)
                .addGap(46, 46, 46)
                .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(backButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCBActionPerformed
        // TODO add your handling code here:
        String choice = selectCB.getSelectedItem().toString();
        try {
            String nameQuery = "select Namn from agent where Epost = '" + choice + "'";
            nameOut.setText(Database.getDatabase().fetchSingle(nameQuery));
        } catch (InfException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_selectCBActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        boolean check = true;
        try {
            
            // Get the selected email from the JComboBox
            String email = selectCB.getSelectedItem().toString();
            // Fetch the Agent_ID associated with the selected email from the database
            String agentID = Database.getDatabase().fetchSingle("select Agent_ID from agent where Epost = '" + email + "'");

            // Fetch lists of Agent_IDs associated with field agents, equipment holders, and responsible agents
            ArrayList<String> responsibleAgents = Database.getDatabase().fetchColumn("select Ansvarig_Agent from alien");
            //
            for(String res : responsibleAgents){
                if(agentID.equals(res)){

                    String updateAlienQuery = "update alien set Ansvarig_Agent = "+ responsibleAgents.get(1)+" where Ansvarig_Agent = "+agentID;
                    Database.getDatabase().update(updateAlienQuery);
                    System.out.println(updateAlienQuery);
                    //update alien set Ansvarig_Agent = 1 where Ansvarig_Agent = 4;
                }
            }
            //
            String deleteKontorsChef = "delete from kontorschef where Agent_ID = '"+agentID+"'";
            Database.getDatabase().delete(deleteKontorsChef);
            
            String deleteFieldagentQuery = "delete from faltagent where Agent_ID ='" + agentID + "'";
            Database.getDatabase().delete(deleteFieldagentQuery);

            String deleteFromEquipment = "delete from innehar_utrustning where Agent_ID ='" + agentID+ "'";
            Database.getDatabase().delete(deleteFromEquipment);

            String deleteLocationManager = "Delete from omradeschef where Agent_ID = +'" + agentID + "'";
            Database.getDatabase().delete(deleteLocationManager);

            String deleteAgentQuery = "delete from agent where Epost ='" + email + "'";
            Database.getDatabase().delete(deleteAgentQuery);
            message.setText("Completed");
            
        } catch (InfException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        AdminStartWindow frame = new AdminStartWindow();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminRemoveAgent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField message;
    private javax.swing.JTextField nameOut;
    private javax.swing.JButton removeButton;
    private javax.swing.JComboBox<String> selectCB;
    // End of variables declaration//GEN-END:variables
}
