/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package meninblack1;
import java.util.ArrayList;
import oru.inf.InfException;
import java.util.HashMap;
/**
 *
 * @author clara
 */
public class AgentListOfAlienRace extends javax.swing.JFrame {

    /**
     * Creates new form AgentShowListOfAlienRace
     */
    public AgentListOfAlienRace(){
        initComponents();
        fillCB();
    }
    private void fillCB(){
        selectCB.addItem("");
        selectCB.removeItem("Item 1");
        selectCB.removeItem("Item 2");
        selectCB.removeItem("Item 3");
        selectCB.removeItem("Item 4");
        selectCB.addItem("Squid");
        selectCB.addItem("Boglodite");
        selectCB.addItem("Worm");
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        AgentAlienRace = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textOutArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        selectCB = new javax.swing.JComboBox<>();
        goBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("List Of All Registered Alien By Race");

        AgentAlienRace.setText("Name of Race");

        textOutArea.setColumns(20);
        textOutArea.setRows(5);
        jScrollPane2.setViewportView(textOutArea);

        jLabel2.setText("List of Aliens By Race");

        selectCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCBActionPerformed(evt);
            }
        });

        goBack.setText("Back");
        goBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(goBack)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AgentAlienRace, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(selectCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgentAlienRace)
                    .addComponent(selectCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(goBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCBActionPerformed
        // TODO add your handling code here:
        // Clear the textOutArea JTextArea to display new results
        textOutArea.setText("");
        
    // Get the selected item from the combo box as a String
        String selection = selectCB.getSelectedItem().toString();
        // Use a switch statement to handle different selections
        switch (selection) {
            case "Worm":
                try{
                    String wormQuery = "Select Alien_ID, Namn from alien where Alien_ID in (select Alien_ID from worm)";
                    ArrayList<HashMap<String, String>> rows = Database.getDatabase().fetchRows(wormQuery);
                    // Fetch rows of data using the constructed query
                    for(HashMap<String, String> oneRow: rows){
                        textOutArea.append(oneRow.get("Alien_ID") + "\t" + oneRow.get("Namn") + "\n");
                }
                }catch(InfException ex){
                    System.out.println(ex);
                }
                break;
            case "Boglodite":
                try{
                    String bogQuery = "Select Alien_ID, Namn from alien where Alien_ID in (select Alien_ID from boglodite)";
                    ArrayList<HashMap<String, String>> rows = Database.getDatabase().fetchRows(bogQuery);
                    for(HashMap<String, String> oneRow: rows){
                        textOutArea.append(oneRow.get("Alien_ID") + "\t" + oneRow.get("Namn") + "\n");
                }
                }catch(InfException ex){
                    System.out.println(ex);
                }
                break;
            case "Squid":
                try{
                    String squidQuery = "Select Alien_ID, Namn from alien where Alien_ID in (select Alien_ID from squid)";
                    ArrayList<HashMap<String, String>> rows = Database.getDatabase().fetchRows(squidQuery);
                    for(HashMap<String, String> oneRow: rows){
                        textOutArea.append(oneRow.get("Alien_ID") + "\t" + oneRow.get("Namn") + "\n");
                }
                }catch(InfException ex){
                    System.out.println(ex);
                }
                break;
            default:
                break;
        }
    }//GEN-LAST:event_selectCBActionPerformed

    private void goBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackActionPerformed
        // TODO add your handling code here:
        AgentStartWindow frame = new AgentStartWindow();
        frame.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_goBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgentListOfAlienRace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgentListOfAlienRace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgentListOfAlienRace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgentListOfAlienRace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgentListOfAlienRace().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AgentAlienRace;
    private javax.swing.JButton goBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> selectCB;
    private javax.swing.JTextArea textOutArea;
    // End of variables declaration//GEN-END:variables
}
