/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package meninblack1;
import java.awt.Container;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import meninblack1.Database;
import oru.inf.InfException;

/**
 *
 * @author maxli
 */
public class AdminChangeAgentInfo extends javax.swing.JFrame{
    /**
     * Creates new form UpdateAgentInfo
     */
    public AdminChangeAgentInfo() {
        initComponents();
        fillComboBox();
        fillCB();
    }
    // This method is used to populate the combo box with agent emails
    private void fillComboBox(){
        try{
            String emailQuery = "Select Epost from agent";
             // Fetch the list of agent emails
            ArrayList<String> agentEmail = Database.getDatabase().fetchColumn(emailQuery);
            selectCB.addItem("");
            selectCB.removeItem("Item 1" );
            selectCB.removeItem("Item 2" );
            selectCB.removeItem("Item 3" );
            selectCB.removeItem("Item 4" );
             // Populate the combo box with agent emails
            for(String item:agentEmail){
                selectCB.addItem(item);
            }
        }catch(InfException ex){
            // Handle potential exceptions by printing the error to the console
            System.out.println(ex);
        }
    }
    private void fillCB(){
        String fillQuery = "select Benamning from omrade";
        selectLocationCB.addItem("");
        selectLocationCB.removeItem("Item 1");
        selectLocationCB.removeItem("Item 2");
        selectLocationCB.removeItem("Item 3");
        selectLocationCB.removeItem("Item 4");
        try{
            ArrayList<String> names = Database.getDatabase().fetchColumn(fillQuery);
            for(String oneName:names){
                selectLocationCB.addItem(oneName);
            }
        }catch(InfException ex){
            System.out.println(ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        numberUpdateEntry = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        updateInfoButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        passwordUpdateEntry = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        agentEmailIdentifierEntry = new javax.swing.JTextField();
        currentNumberOut = new javax.swing.JTextField();
        currentLocationOut = new javax.swing.JTextField();
        currentPasswordOut = new javax.swing.JTextField();
        findAgentButton = new javax.swing.JButton();
        goBackButton = new javax.swing.JButton();
        selectCB = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        selectLocationCB = new javax.swing.JComboBox<>();
        messageBox = new javax.swing.JTextField();

        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Enter information to update");

        jLabel2.setText("Phonenumber");

        updateInfoButton.setText("Update");
        updateInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInfoButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Location");

        jLabel6.setText("Password");

        jLabel5.setText("Agent to change");

        findAgentButton.setText("Find agent");
        findAgentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAgentButtonActionPerformed(evt);
            }
        });

        goBackButton.setText("Back");
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });

        selectCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Agent ID");

        jLabel3.setText("New phonenumber");

        jLabel9.setText("New location");

        jLabel10.setText("New password (max 6 signs)");

        selectLocationCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        messageBox.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(goBackButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(selectCB, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(currentNumberOut)
                                            .addComponent(currentPasswordOut, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                            .addComponent(currentLocationOut))
                                        .addComponent(agentEmailIdentifierEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(findAgentButton))
                                    .addGap(45, 45, 45)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(passwordUpdateEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(selectLocationCB, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(numberUpdateEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(updateInfoButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(messageBox, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addGap(128, 128, 128))))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(selectCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findAgentButton)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agentEmailIdentifierEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(currentNumberOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(currentLocationOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(currentPasswordOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(numberUpdateEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(selectLocationCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordUpdateEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateInfoButton)
                    .addComponent(messageBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(goBackButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInfoButtonActionPerformed
        // TODO add your handling code here:
        boolean check = true;
        if (!selectCB.getSelectedItem().toString().equals("")) {
            try {
                messageBox.setText("");
                String agentEmail = selectCB.getSelectedItem().toString();
                String fetchID = "SELECT Agent_ID FROM agent where Epost = '" + agentEmail + "'";
                String agentID = Database.getDatabase().fetchSingle(fetchID);
                //currentNumberOut.setText("Select Telefon from agent where Agent_ID = '"+ agent);
                if (!passwordUpdateEntry.getText().isEmpty()) {
                    String password = passwordUpdateEntry.getText();
                    if (!Validering.isValidPassword(password)) {
                        check = false;
                        messageBox.setText("Password error");
                    }
                    String updateQuery = "update agent set Losenord = '" + password + "' where Agent_id =" + agentID;
                    if (check) {
                        Database.getDatabase().update(updateQuery);
                    }
                    currentPasswordOut.setText("");
                    currentPasswordOut.setText(Database.getDatabase().fetchSingle("Select Losenord from agent where Agent_ID = " + agentID));
                    passwordUpdateEntry.setText("");
                }
                if (!numberUpdateEntry.getText().isEmpty()) {
                    String number = numberUpdateEntry.getText();
                    if (!Validering.isValidPhone(number)) {
                        check = false;
                        messageBox.setText("Phonenumber error");
                    }
                    String updateQuery = "update agent set Telefon = '" + number + "' where Agent_ID =" + agentID;
                    if (check) {
                        Database.getDatabase().update(updateQuery);
                    }
                    currentNumberOut.setText("");
                    currentNumberOut.setText(Database.getDatabase().fetchSingle("Select Telefon from agent where Agent_ID = " + agentID));
                    numberUpdateEntry.setText("");

                }
                if (!selectLocationCB.getSelectedItem().toString().equals("")) {
                    String locationName = selectLocationCB.getSelectedItem().toString();
                    String idQuery = "SELECT Omrades_ID FROM omrade WHERE Benamning = '" + locationName + "'";
                    System.out.println(idQuery);
                    int locationID = Integer.parseInt(Database.getDatabase().fetchSingle(idQuery));
                    String updateQuery = "update agent set Omrade = " + locationID + " where Agent_ID =" + agentID;
                    Database.getDatabase().update(updateQuery);
                    currentLocationOut.setText("");
                    currentLocationOut.setText(Database.getDatabase().fetchSingle("Select Omrade from agent where Agent_ID = " + agentID));
                }
            } catch (InfException ex) {
                messageBox.setText("Password error");
            }
        } else {
            messageBox.setText("Enter agent");
        }
    }//GEN-LAST:event_updateInfoButtonActionPerformed

    private void findAgentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findAgentButtonActionPerformed
        // TODO add your handling code here:
        String agentEmail = selectCB.getSelectedItem().toString();
        if (!selectCB.getSelectedItem().toString().equals("")) {
            try {
                currentNumberOut.setText(Database.getDatabase().fetchSingle("Select Telefon from agent where Epost = '" + agentEmail + "'"));
                //currentEmailOut.setText(Database.getDatabase().fetchSingle("Select Epost from agent where Email = "+ agentEmail));
                currentPasswordOut.setText(Database.getDatabase().fetchSingle("Select Losenord from agent where Epost = '" + agentEmail + "'"));
                currentLocationOut.setText(Database.getDatabase().fetchSingle("Select Omrade from agent where Epost = '" + agentEmail + "'"));
            } catch (InfException ex) {
                System.out.println(ex);
            }
        }
        agentEmailIdentifierEntry.setText(agentEmail);

    }//GEN-LAST:event_findAgentButtonActionPerformed

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
        // TODO add your handling code here:
        AdminStartWindow frame = new AdminStartWindow();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_goBackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminChangeAgentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminChangeAgentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminChangeAgentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminChangeAgentInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminChangeAgentInfo().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField agentEmailIdentifierEntry;
    private javax.swing.JTextField currentLocationOut;
    private javax.swing.JTextField currentNumberOut;
    private javax.swing.JTextField currentPasswordOut;
    private javax.swing.JButton findAgentButton;
    private javax.swing.JButton goBackButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField messageBox;
    private javax.swing.JTextField numberUpdateEntry;
    private javax.swing.JTextField passwordUpdateEntry;
    private javax.swing.JComboBox<String> selectCB;
    private javax.swing.JComboBox<String> selectLocationCB;
    private javax.swing.JButton updateInfoButton;
    // End of variables declaration//GEN-END:variables
}
