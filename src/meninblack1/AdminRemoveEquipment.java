/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package meninblack1;
import java.util.ArrayList;
import oru.inf.InfException;


/**
 *
 * @author maxli
 */
public class AdminRemoveEquipment extends javax.swing.JFrame {

    /**
     * Creates new form AdminRemoveEquipment
     */
    public AdminRemoveEquipment() {
        initComponents();
        fillCB();
    }
    private void fillCB(){
        String fillQuery = "select Benamning from utrustning";
        chooseCB.addItem("");
        chooseCB.removeItem("Item 1");
        chooseCB.removeItem("Item 2");
        chooseCB.removeItem("Item 3");
        chooseCB.removeItem("Item 4");
        try{
            ArrayList<String> options = Database.getDatabase().fetchColumn(fillQuery);
            for(String oneOption: options){
                chooseCB.addItem(oneOption);
            }
        }catch(InfException ex){
            System.out.println(ex);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        chooseCB = new javax.swing.JComboBox<>();
        selectOut = new javax.swing.JTextField();
        confirmButton = new javax.swing.JButton();
        messageBox = new javax.swing.JTextField();
        goBackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Select equipment to remove");

        chooseCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        chooseCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseCBActionPerformed(evt);
            }
        });

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        messageBox.setBorder(null);

        goBackButton.setText("Back");
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(goBackButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chooseCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(confirmButton))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(selectOut, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                    .addComponent(messageBox)))
                            .addComponent(jLabel1))))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(goBackButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseCBActionPerformed
        // TODO add your handling code here:
        String selection = chooseCB.getSelectedItem().toString();
        selectOut.setText(selection);
        messageBox.setText("");
    }//GEN-LAST:event_chooseCBActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        // TODO add your handling code here:
        String equipmentNameToDelete = chooseCB.getSelectedItem().toString();
        if (!chooseCB.getSelectedItem().toString().equals("")) {
            String deleteQueryInneharUtrustning = "delete from innehar_utrustning where Utrustnings_ID = (select Utrustnings_ID from utrustning where Benamning = '" + equipmentNameToDelete + "')"; //\"lasso\");"
            String deleteQuery = "delete from utrustning where Benamning = '" + equipmentNameToDelete + "'"; //\"lasso\";

            try {
                ArrayList<String> guns = Database.getDatabase().fetchColumn("select Utrustnings_ID from vapen");
                ArrayList<String> coms = Database.getDatabase().fetchColumn("select Utrustnings_ID from kommunikation");
                ArrayList<String> tech = Database.getDatabase().fetchColumn("select Utrustnings_ID from teknik");
                for (String oneGunID : guns) {
                    if (oneGunID.equals(Database.getDatabase().fetchSingle("select Utrustnings_ID from utrustning where Benamning ='" + equipmentNameToDelete + "'"))) {
                        Database.getDatabase().delete("delete from vapen where Utrustnings_ID = " + oneGunID);
                    }
                }
                for (String oneComID : coms) {
                    if (oneComID.equals(Database.getDatabase().fetchSingle("select Utrustnings_ID from utrustning where Benamning ='" + equipmentNameToDelete + "'"))) {
                        Database.getDatabase().delete("delete from kommunikation where Utrustnings_ID = " + oneComID);
                    }
                }
                for (String oneTechID : tech) {
                    if (oneTechID.equals(Database.getDatabase().fetchSingle("select Utrustnings_ID from utrustning where Benamning ='" + equipmentNameToDelete + "'"))) {
                        Database.getDatabase().delete("delete from teknik where Utrustnings_ID = " + oneTechID);
                    }
                }
                Database.getDatabase().delete(deleteQueryInneharUtrustning);
                Database.getDatabase().delete(deleteQuery);
                messageBox.setText("Complete");
            } catch (InfException ex) {
                System.out.println(ex);
            }
            fillCB();

            selectOut.setText("");

        }

    }//GEN-LAST:event_confirmButtonActionPerformed

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
        // TODO add your handling code here:
        AdminStartWindow frame = new AdminStartWindow();
        frame.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_goBackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminRemoveEquipment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> chooseCB;
    private javax.swing.JButton confirmButton;
    private javax.swing.JButton goBackButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField messageBox;
    private javax.swing.JTextField selectOut;
    // End of variables declaration//GEN-END:variables
}
