/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package meninblack1;
import java.util.ArrayList;
import oru.inf.InfException;
import java.util.Objects;


/**
 *
 * @author maxli
 */
public class AdminRemoveAlien extends javax.swing.JFrame {

    /**
     * Creates new form AdminRemoveAlien
     */
    public AdminRemoveAlien() {
        initComponents();
        fillCB();
    }
    private void fillCB(){
        selectCB.addItem("");
        selectCB.removeItem("Item 1");
        selectCB.removeItem("Item 2");
        selectCB.removeItem("Item 3");
        selectCB.removeItem("Item 4");
        String selectQuery = "select Epost from alien";
        try {
            // Fetch a list of alien email addresses from the database
            ArrayList<String> names = Database.getDatabase().fetchColumn(selectQuery);
            for(String oneName:names){  // Iterate through each alien email address
                String selectIDQuery = "select Alien_ID from alien where Epost = '"+ oneName + "'";
                int alien_ID = Integer.parseInt(Database.getDatabase().fetchSingle(selectIDQuery));
                // Add the current alien email address to the JComboBox, associating it with the corresponding Alien_ID
                selectCB.addItem(oneName);
            }
        }catch(InfException ex){
            System.out.println(ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectCB = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        nameOut = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        messageBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCBActionPerformed(evt);
            }
        });

        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Remove alien");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(38, 38, 38)
                                .addComponent(messageBox, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(selectCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nameOut, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(messageBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCBActionPerformed
        // TODO add your handling code here:
        String choice = selectCB.getSelectedItem().toString();
        try{
            String nameQuery = "select Namn from alien where Epost = '"+ choice+ "'";
            nameOut.setText(Database.getDatabase().fetchSingle(nameQuery));
        }catch(InfException ex){
            System.out.println(ex);
        }
            
    }//GEN-LAST:event_selectCBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Get the alien name to be deleted from the nameOut field
        String nameDelete = nameOut.getText();
        System.out.println(nameDelete);
        try{
            // Fetch the Alien_ID corresponding to the given alien name from the database
        int alien_ID = Integer.parseInt(Database.getDatabase().fetchSingle("select Alien_ID from alien where Namn = '"+ nameDelete+"'"));
        Integer alienIDInteger = alien_ID;
        // Fetch lists of Alien_IDs associated with each race (worm, squid, boglodite)
        ArrayList<String> worms = Database.getDatabase().fetchColumn("select Alien_ID from worm");
        ArrayList<String> squids = Database.getDatabase().fetchColumn("select Alien_ID from squid");
        ArrayList<String> bogs = Database.getDatabase().fetchColumn("select Alien_ID from boglodite");
        // SQL query to delete the alien from the alien table
        String deleteAlienQuery = "delete from alien where Alien_ID ="+alien_ID; 

        Boolean wormFound = false;
        Boolean squidFound = false;
        Boolean bogFound = false;
    
        for(String oneWorm: worms){
            if(oneWorm.equals(alienIDInteger.toString())){
                wormFound = true;
                System.out.println("Worm");
                String deleteWormQuery = "delete from worm where Alien_ID ="+alien_ID;
                Database.getDatabase().delete(deleteWormQuery);
            }
        }
        for(String oneSquid:squids){
            if(oneSquid.equals(alienIDInteger.toString())){
                squidFound= true;
                System.out.println("Fungerar squid");
                String deleteSquidQuery = "delete from squid where Alien_ID ="+alien_ID;
                Database.getDatabase().delete(deleteSquidQuery);
            }
        }
        for(String oneBog:bogs){
            if(oneBog.equals(alienIDInteger.toString())){
                bogFound = true;
                System.out.println("bog");
                String deleteBogQuery = "delete from boglodite where Alien_ID ="+alien_ID;
                Database.getDatabase().delete(deleteBogQuery);
            }
        }
        Database.getDatabase().delete(deleteAlienQuery);
        messageBox.setText("Removed");
        }catch(InfException ex){
            System.out.println(ex);
        }
        
/*DELETE table1, table2
FROM table1
JOIN table2 ON table1.common_column = table2.common_column
WHERE your_condition;*/

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        AdminStartWindow frame = new AdminStartWindow();
        frame.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminRemoveAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminRemoveAlien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField messageBox;
    private javax.swing.JTextField nameOut;
    private javax.swing.JComboBox<String> selectCB;
    // End of variables declaration//GEN-END:variables
}
